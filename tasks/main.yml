---

- name: install dependencies packages and PostgreSQL
  apt:
    name: "{{ item }}"
    update_cache: true
    install_recommends: false
  with_items:
    - gcc
    - python3-dev
    - python3-pip
    - postgresql
    - postgresql-server-dev-all
    - python-setuptools
    - nginx
    - php7.2-fpm
    - php7.2-xml
    - php7.2-zip
    - php7.2-pgsql
    - php7.2-gd
    - php7.2-mbstring
    - php7.2-curl
    - duplicity

- name: Install tool packages easyInstall
  easy_install:
    name: "{{ item }}"
  with_items:
    - psycopg2

- name: Install python-swiftclient
  pip:
    name: "{{ item }}"
  with_items:
    - python-swiftclient
    - python-keystoneclient

- name: Creating the Owncloud PostgreSQL User
  postgresql_user:
    name: "{{ cloud_pg_user }}"
    role_attr_flags: "CREATEDB,NOSUPERUSER,LOGIN"
    password: "{{ cloud_pg_hash }}"
  become: true
  become_user: postgres
  tags: owncloud_db

- name: Creating the Owncloud PostgreSQL DB
  postgresql_db:
    name: owncloud
    owner: "{{ cloud_pg_user }}"
  become: true
  become_user: postgres
  tags: owncloud_db

- name: download and install Owncloud
  unarchive:
    src: https://download.owncloud.org/community/owncloud-10.2.0.tar.bz2
    remote_src: true
    dest: /var/www/

- name: update apt repository with certbot one
  apt_repository: repo="ppa:certbot/certbot"
  tags: owncloud_certificate,owncloud_proxy

- name: install certbot for nginx
  apt: name=python-certbot-nginx update_cache=yes force=yes install_recommends=no
  tags: owncloud_certificate,owncloud_proxy

- name: install certificate
  command: "certbot --nginx -n --domains {{ cloud_url }} --agree-tos -m {{ default_maintenance_email }}"
  tags: owncloud_certificate,owncloud_proxy

- name: add cron job to renew certificate every monday
  cron:
    name: renew certificate
    minute: 30
    hour: 2
    weekday: 1
    job: certbot renew --nginx >> /var/log/le-renew.log
  tags: owncloud_certificate,owncloud_proxy

# --------------------------------------------------
# NGINX Configuration
# --------------------------------------------------

- name: Configure Nginx
  template:
    src: owncloud.j2
    dest: "/etc/nginx/sites-available/owncloud"
    owner: "root"
    group: "root"
    mode: "0644"
  notify: restart nginx
  tags: owncloud_proxy

- name: "Enable nginx configuration"
  file: src="/etc/nginx/sites-available/owncloud" dest="/etc/nginx/sites-enabled/owncloud" state=link
  notify: restart nginx
  tags: owncloud_proxy

- name: Remove default Nginx configuration
  file: path="/etc/nginx/sites-enabled/default" state=absent
  notify: restart nginx
  tags: owncloud_proxy


# --------------------------------------------------
# Backup Configuration
# --------------------------------------------------
- name: Backup script
  template:
    src: backup.sh.j2
    dest: /root/backup-owncloud.sh
    mode: '0700'
    owner: root
    group: root
  when: inventory_hostname in groups['maintenance_contract']

- name: add cron job to perform backup
  cron:
    name: Backup Owncloud
    minute: "45"
    hour: "3"
    weekday: "7"
    job: /root/backup-owncloud.sh
  when: inventory_hostname in groups['maintenance_contract']


# --------------------------------------------------
# Permissions
# --------------------------------------------------
- name: Set file rights on the ones to be owned by root
  file:
    path: "{{ item }}"
    owner: root
    group: www-data
    mode: g-w,o-rwx
    recurse: true
    state: directory
  with_items:
    - /var/www/owncloud/
  tags: owncloud_permissions

- name: Set file rights on the ones to be owned by htuser
  file:
    path: "{{ item }}"
    owner: www-data
    group: www-data
    mode: g-w,o-rwx
    recurse: true
    state: directory
  with_items:
    - /var/www/owncloud/apps
    - /var/www/owncloud/config
    - /var/www/owncloud/updater
    - "{{ cloud_data_dir }}/"
  tags: owncloud_permissions

- name: Set execution right on occ
  file:
    path: "{{ item }}"
    owner: www-data
    group: www-data
    mode: +x
  with_items:
    - /var/www/owncloud/occ
  tags: owncloud_permissions

- name: Limit rights on htaccess
  file:
    path: "{{ item }}"
    owner: root
    group: www-data
    mode: '0644'
  with_items:
    - /var/www/owncloud/.htaccess
    - "{{ cloud_data_dir }}/.htaccess"
  ignore_errors: true
  tags: owncloud_permissions
